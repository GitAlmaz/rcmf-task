[{"/Users/almazinhs/Desktop/Projects/rcmf-task/src/index.js":"1","/Users/almazinhs/Desktop/Projects/rcmf-task/src/routes/routes.js":"2","/Users/almazinhs/Desktop/Projects/rcmf-task/src/store/auth/authReducer.js":"3","/Users/almazinhs/Desktop/Projects/rcmf-task/src/store/error/errorReducer.js":"4","/Users/almazinhs/Desktop/Projects/rcmf-task/src/layouts/EmptyLayout.tsx":"5","/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Main.tsx":"6","/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Login.tsx":"7","/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/Navigation.tsx":"8","/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/Task.tsx":"9","/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/CreateTaskModal.tsx":"10","/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Tasks.tsx":"11"},{"size":989,"mtime":1612982396520,"results":"12","hashOfConfig":"13"},{"size":1138,"mtime":1613065305985,"results":"14","hashOfConfig":"13"},{"size":1123,"mtime":1612982396522,"results":"15","hashOfConfig":"13"},{"size":468,"mtime":1612982396522,"results":"16","hashOfConfig":"17"},{"size":326,"mtime":1613056030697,"results":"18","hashOfConfig":"13"},{"size":177,"mtime":1613056044365,"results":"19","hashOfConfig":"13"},{"size":2019,"mtime":1613056037142,"results":"20","hashOfConfig":"13"},{"size":1364,"mtime":1613056005491,"results":"21","hashOfConfig":"13"},{"size":3068,"mtime":1613068380722,"results":"22","hashOfConfig":"13"},{"size":1188,"mtime":1613066467116,"results":"23","hashOfConfig":"13"},{"size":3943,"mtime":1613069196150,"results":"24","hashOfConfig":"13"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"27"},"79ctgw",{"filePath":"28","messages":"29","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"5soctt",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"41","messages":"42","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":1,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"source":"49"},"/Users/almazinhs/Desktop/Projects/rcmf-task/src/index.js",[],["50","51"],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/routes/routes.js",[],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/store/auth/authReducer.js",[],["52","53"],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/store/error/errorReducer.js",[],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/layouts/EmptyLayout.tsx",[],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Main.tsx",["54"],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Login.tsx",[],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/Navigation.tsx",["55"],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/Task.tsx",["56"],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/components/CreateTaskModal.tsx",[],"/Users/almazinhs/Desktop/Projects/rcmf-task/src/pages/Tasks.tsx",["57"],"import React, { useState, useEffect, useCallback, memo } from 'react'\nimport { connect, useSelector, useDispatch } from 'react-redux'\nimport {\n\tForm,\n\tEmpty,\n\tButton,\n\tSpin,\n\tRow,\n\tCol,\n\tPageHeader,\n\tTypography\n} from 'antd'\nimport { FileAddOutlined } from '@ant-design/icons'\nimport {\n\tcreateTask,\n\tdeleteTask,\n\teditTask,\n\tloadTasks\n} from '../store/tasks/tasksActions'\nimport CreateTaskModal from '../components/CreateTaskModal'\nimport Task from '../components/Task'\n\nconst Tasks = memo(\n\t({}) => {\n\t\tconst tasks = useSelector(state: IRootState => state.tasks.tasks)\n\t\tconst isLoading = useSelector(state => state.tasks.isLoading)\n\t\tconst [isModalVisible, setIsModalVisible] = useState(false)\n\t\tconst [form] = Form.useForm()\n\t\tconst dispatch = useDispatch()\n\n\t\tconst createTaskAction = useCallback(dispatch(createTask()), [])\n\t\tconst deleteTaskAction = useCallback(dispatch(deleteTask()), [])\n\t\tconst editTaskAction = useCallback(dispatch(editTask()), [])\n\t\tconst loadTasksAction = useCallback(dispatch(loadTasks()), [])\n\n\t\tconst submitHandler = async values => {\n\t\t\ttry {\n\t\t\t\tconst data = { ...values, create_date: Date.now() }\n\t\t\t\tawait createTaskAction(data)\n\t\t\t} catch (e) {}\n\t\t}\n\t\tconst handleToggleModal = () => {\n\t\t\tsetIsModalVisible(!isModalVisible)\n\t\t\tform.resetFields()\n\t\t}\n\t\tconst handleOk = () => {\n\t\t\tform\n\t\t\t\t.validateFields()\n\t\t\t\t.then(values => {\n\t\t\t\t\thandleToggleModal()\n\t\t\t\t\tsubmitHandler(values)\n\t\t\t\t})\n\t\t\t\t.catch(e => {\n\t\t\t\t\tconsole.log(e)\n\t\t\t\t})\n\t\t}\n\t\tconst dragStart = e => console.log('dragStart', e)\n\t\tconst dragMove = e => console.log('dragMove', e)\n\t\tconst dragEnd = e => console.log('dragEnd', e)\n\n\t\tconst onTaskDelete = ({ id }) => deleteTaskAction(id)\n\t\tconst onTaskEdit = value => editTaskAction(value)\n\n\t\tuseEffect(() => {\n\t\t\t;(async () => await loadTasksAction())()\n\t\t}, [])\n\n\t\treturn isLoading ? (\n\t\t\t<Spin\n\t\t\t\tsize='large'\n\t\t\t\tstyle={{\n\t\t\t\t\twidth: '100%',\n\t\t\t\t\theight: '100%',\n\t\t\t\t\tdisplay: 'flex',\n\t\t\t\t\tjustifyContent: 'center',\n\t\t\t\t\talignItems: 'center'\n\t\t\t\t}}\n\t\t\t/>\n\t\t) : (\n\t\t\t<>\n\t\t\t\t<CreateTaskModal\n\t\t\t\t\tisModalVisible={isModalVisible}\n\t\t\t\t\ttitle='Описание задачи'\n\t\t\t\t\thandleOk={handleOk}\n\t\t\t\t\thandleCancel={handleToggleModal}\n\t\t\t\t\tokText='Создать'\n\t\t\t\t\tcancelText='Отменить'\n\t\t\t\t\tform={form}\n\t\t\t\t/>\n\t\t\t\t{tasks.completed || tasks.unfulfilled ? (\n\t\t\t\t\t<>\n\t\t\t\t\t\t<PageHeader\n\t\t\t\t\t\t\tonBack={() => window.history.back()}\n\t\t\t\t\t\t\ttitle='Задачи'\n\t\t\t\t\t\t\tstyle={{ padding: '16px 0' }}\n\t\t\t\t\t\t\textra={[\n\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\tkey='createTask'\n\t\t\t\t\t\t\t\t\ttype='primary'\n\t\t\t\t\t\t\t\t\tonClick={handleToggleModal}\n\t\t\t\t\t\t\t\t\ticon={<FileAddOutlined />}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tСоздать задачу\n\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t]}\n\t\t\t\t\t\t></PageHeader>\n\t\t\t\t\t\t<Row gutter={{ xs: 8, sm: 16, md: 24, lg: 32 }}>\n\t\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t\t<Typography.Paragraph>Ожидание:</Typography.Paragraph>\n\t\t\t\t\t\t\t\t{tasks.unfulfilled.map(task => (\n\t\t\t\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\t\t\t\tdata={task}\n\t\t\t\t\t\t\t\t\t\tonTaskDelete={onTaskDelete}\n\t\t\t\t\t\t\t\t\t\tonTaskEdit={onTaskEdit}\n\t\t\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t<Col span={12}>\n\t\t\t\t\t\t\t\t<Typography.Paragraph>Готово:</Typography.Paragraph>\n\t\t\t\t\t\t\t\t{tasks.completed.map(task => (\n\t\t\t\t\t\t\t\t\t<Task\n\t\t\t\t\t\t\t\t\t\tdata={task}\n\t\t\t\t\t\t\t\t\t\tonTaskDelete={onTaskDelete}\n\t\t\t\t\t\t\t\t\t\tonTaskEdit={onTaskEdit}\n\t\t\t\t\t\t\t\t\t\tkey={task.id}\n\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t))}\n\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t</Row>\n\t\t\t\t\t</>\n\t\t\t\t) : (\n\t\t\t\t\t<Empty\n\t\t\t\t\t\timage='https://gw.alipayobjects.com/zos/antfincdn/ZHrcdLPrvN/empty.svg'\n\t\t\t\t\t\timageStyle={{\n\t\t\t\t\t\t\theight: 120\n\t\t\t\t\t\t}}\n\t\t\t\t\t\tdescription={<span>Список задачь пуст</span>}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Button type='primary' onClick={handleToggleModal}>\n\t\t\t\t\t\t\tСоздать\n\t\t\t\t\t\t</Button>\n\t\t\t\t\t</Empty>\n\t\t\t\t)}\n\t\t\t</>\n\t\t)\n\t},\n\t(prev, next) => {\n\t\tif (prev.syncTasks !== next.syncTasks) {\n\t\t\treturn false\n\t\t} else {\n\t\t\treturn true\n\t\t}\n\t}\n)\n\nexport default connect(null, { createTask, deleteTask, editTask, loadTasks })(\n\tTasks\n)\n",{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","replacedBy":"61"},{"ruleId":"58","replacedBy":"62"},{"ruleId":"60","replacedBy":"63"},{"ruleId":"64","severity":1,"message":"65","line":2,"column":18,"nodeType":"66","messageId":"67","endLine":2,"endColumn":29},{"ruleId":"64","severity":1,"message":"68","line":13,"column":8,"nodeType":"66","messageId":"67","endLine":13,"endColumn":15},{"ruleId":"69","severity":1,"message":"70","line":58,"column":6,"nodeType":"71","endLine":58,"endColumn":68},{"ruleId":null,"fatal":true,"severity":2,"message":"72","line":25,"column":33},"no-native-reassign",["73"],"no-negated-in-lhs",["74"],["73"],["74"],"@typescript-eslint/no-unused-vars","'useSelector' is defined but never used.","Identifier","unusedVar","'history' is assigned a value but never used.","jsx-a11y/anchor-is-valid","The href attribute is required for an anchor to be keyboard accessible. Provide a valid, navigable address as the href value. If you cannot provide an href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","Parsing error: ',' expected.","no-global-assign","no-unsafe-negation"]